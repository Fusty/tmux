#reload tmux conf with Prefix + r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux.conf"
 
# C-a is escape sequence
unbind C-b
set -g prefix C-j
bind j send-prefix

# vim ftw
# unnecessary because $EDITOR=vim
# setw -g mode-keys vi

# copy pasta #
unbind [
# C to enter copy mode
bind C copy-mode
# P to paste, or shift-inser as it's in bothe buffers
unbind P
bind P paste-buffer

# switch panes with Tab
unbind Tab
bind Tab select-pane -t :.+

#open man page with /
bind / command-prompt "split-window -h 'exec man %%'"

# resize pane with arrow keys
# -r: can be repeated without pressing prefix
#     again (500ms after last '-r' action or prefix)
unbind Left
unbind Right
unbind Down
unbind Up
bind -r Left resize-pane -L 2
bind -r Right resize-pane -R 2
bind -r Down resize-pane -D 2
bind -r Up resize-pane -U 2

# new window ^C c 
unbind ^C
bind ^C new-window
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# next ^@ ^N space n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# ^A to get to last window
unbind ^A
bind ^A last-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# " windowlist -b
unbind '"'
bind '"' choose-window

# quit \ 
#unbind \
#bind \ confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

#kill x X
unbind X
bind X confirm-before "kill-pane"
unbind x
bind x confirm-before "kill-pane"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window -v
unbind S
bind S split-window -v

# mouse-select-pane [on | off]
# #   If on, tmux captures the mouse and when a window is
# #   split into multiple panes the mouse may be used to
# #   select the current pane.  The mouse click is also
# #   passed through to the application as normal.
# #
set -g mouse-select-pane on

#CPU MEM
#https://github.com/thewtex/tmux-mem-cpu-load
set -g status-interval 2
set -g status-right "#(tmux-mem-cpu-load 2) #H"

set -g default-terminal "xterm-256colour"

 
# default statusbar colours
#set-option -g status-bg colour235 #base02
#set-option -g status-fg colour136 #yellow
set-option -g status-bg colour235
set-option -g status-fg default #base02
set-option -g status-attr default
 
# default window title colours
#set-window-option -g window-status-fg colour244
#set-window-option -g window-status-bg default
set-window-option -g window-status-fg colour255
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
#set-window-option -g window-status-attr bright
 
# active window title colours
set-window-option -g window-status-current-fg colour166
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright
 
# pane border
set-option -g pane-border-fg colour235 #base02
#set-option -g pane-border-fg
#set-option -g pane-active-border-fg colour240 #base01
#set-option -g pane-active-border-fg colour249
set-option -g pane-active-border-fg colour166
 
# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange
 
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
 
# clock
set-window-option -g clock-mode-colour colour64 #green
